[General]
network = ZeroWaitNetwork
sim-time-limit = 100s

# Network and node configuration
*.control.numApps = 1
*.sensor*.numApps = 1

# Application configuration for control node
*.control.app[0].typename = "DQNControllerApp"
*.control.app[0].destAddresses = "sensor0 sensor1 sensor2 sensor3 sensor4 sensor5 sensor6"

# Application configuration for sensor nodes
*.sensor*.app[0].typename = "DQNSensorApp"
*.sensor*.app[0].destAddresses = "control"

# Common app configuration
*.control.app[0].destPort = 1000
*.control.app[0].localPort = 1000
*.sensor*.app[0].destPort = 1000
*.sensor*.app[0].localPort = 1000
*.control.app[0].packetSize = 10Byte
*.sensor*.app[0].packetSize = 10Byte
*.control.app[0].messageLength = 10Byte
*.sensor*.app[0].messageLength = 10Byte

# Staggered automatic configuration and timings
*.control.app[0].useAutoConfig = true
*.sensor*.app[0].useAutoConfig = true

# Staggered start times
*.control.app[0].startTime = 2s  # Control node starts at 2 seconds
*.sensor[0].app[0].startTime = 3s  # Sensor 0 starts at 3 seconds
*.sensor[1].app[0].startTime = 4s  # Sensor 1 starts at 4 seconds
*.sensor[2].app[0].startTime = 5s  # Sensor 2 starts at 5 seconds
*.sensor[3].app[0].startTime = 6s  # Sensor 3 starts at 6 seconds
*.sensor[4].app[0].startTime = 7s  # Sensor 4 starts at 7 seconds
*.sensor[5].app[0].startTime = 8s  # Sensor 5 starts at 8 seconds
*.sensor[6].app[0].startTime = 9s  # Sensor 6 starts at 9 seconds
*.sensor[7].app[0].startTime = 9s
*.sensor[8].app[0].startTime = 9s
*.sensor[9].app[0].startTime = 9s
*.sensor[10].app[0].startTime = 9s
# Staggered send intervals (exponential distribution)
*.control.app[0].sendInterval = exponential(1s)  # Control node sends every ~1 second
*.sensor[0].app[0].sendInterval = exponential(1s)  # Sensor 0 sends every ~1 second
*.sensor[1].app[0].sendInterval = exponential(1.2s)  # Sensor 1 sends every ~1.2 seconds
*.sensor[2].app[0].sendInterval = exponential(1.4s)  # Sensor 2 sends every ~1.4 seconds
*.sensor[3].app[0].sendInterval = exponential(1.6s)  # Sensor 3 sends every ~1.6 seconds
*.sensor[4].app[0].sendInterval = exponential(1.8s)  # Sensor 4 sends every ~1.8 seconds
*.sensor[5].app[0].sendInterval = exponential(2s)  # Sensor 5 sends every ~2 seconds
*.sensor[6].app[0].sendInterval = exponential(2.2s)  # Sensor 6 sends every ~2.2 seconds
# Wireless interface configuration
*.control.wlan[0].typename = "WirelessInterface"
*.sensor*.wlan[0].typename = "WirelessInterface"
*.control.wlan[0].radio.typename = "UnitDiskRadio"
*.sensor*.wlan[0].radio.typename = "UnitDiskRadio"
*.control.wlan[0].mac.typename = "CsmaCaMac"
*.control.wlan[0].mac.ackTimeout = 300us
*.control.wlan[0].queue.typename = "DropTailQueue"
*.control.wlan[0].queue.packetCapacity = 10
*.control.wlan[0].mac.useAck = true
*.sensor*.wlan[0].mac.typename = "CsmaCaMac"
*.sensor*.wlan[0].mac.ackTimeout = 300us
*.sensor*.wlan[0].queue.typename = "DropTailQueue"
*.sensor*.wlan[0].queue.packetCapacity = 10
*.sensor*.wlan[0].mac.useAck = true
*.control.wlan[0].radio.transmitter.communicationRange = 500m
*.sensor*.wlan[0].radio.transmitter.communicationRange = 500m
*.control.wlan[0].radio.transmitter.bitrate = 1Mbps
*.sensor*.wlan[0].radio.transmitter.bitrate = 1Mbps
*.control.wlan[*].bitrate = 1Mbps
*.sensor*.wlan[*].bitrate = 1Mbps
record-eventlog = false

# Visualization
*.visualizer.mediumVisualizer.displayCommunicationRanges = true
*.visualizer.packetDropVisualizer.displayPackets = true
*.visualizer.queueVisualizer.displayQueues = true
